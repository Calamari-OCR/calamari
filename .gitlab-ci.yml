variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Workaround to install python packages again, because sometimes they are not found
before_script:
  - set -e
  - virtualenv -p python3.7 venv
  - source venv/bin/activate
  - pip install --use-feature 2020-resolver -r requirements.txt
  - python setup.py install

cache:
  paths:
    - .cache/pip
    - venv
    - calamari_models
  policy: pull

stages:
  - install_dependencies
  - test

install_dependencies:
  stage: install_dependencies
  cache:
    paths:
      - .cache/pip
      - venv
      - calamari_models
    policy: pull-push
  before_script:
    - set -e
    - rm -rf venv
    - rm -rf calamari_models
  script:
    - set -e
    - virtualenv -p python3.7 venv
    - source venv/bin/activate
    - pip install --use-feature 2020-resolver -r requirements.txt
    - python setup.py install
    - wget -q -O - https://github.com/Calamari-OCR/calamari_models/archive/1.0.tar.gz | tar xz && mv calamari_models-1.0 calamari_models


test-train-file:
  stage: test
  script:
    - set -e
    - python -m unittest calamari_ocr.test.test_train_file

test-train-pagexml:
  stage: test
  script:
    - set -e
    - python -m unittest calamari_ocr.test.test_train_pagexml

test-train-abbyyxml:
  stage: test
  script:
    - set -e
    - python -m unittest calamari_ocr.test.test_train_abbyyxml

test-train-hdf5:
  stage: test
  script:
    - set -e
    - python -m unittest calamari_ocr.test.test_train_hdf5

test-train-generated:
  stage: test
  script:
    - set -e
    - python -m unittest calamari_ocr.test.test_train_generated

test-train-mixed-data:
  stage: test
  script:
    - set -e
    - python -m unittest calamari_ocr.test.test_train_mixed_data

test-augmentation:
  stage: test
  script:
    - set -e
    - python -m unittest calamari_ocr.test.test_augmentation

test-resume-training:
  stage: test
  script:
    - set -e
    - python -m unittest calamari_ocr.test.test_resume_training

test-pretrained:
  stage: test
  script:
    - set -e
    - python -m unittest calamari_ocr.test.test_pretrained

test-network-architectures:
  stage: test
  script:
    - set -e
    - python -m unittest calamari_ocr.test.test_network_architectures

test-train-ensemble:
  stage: test
  script:
    - set -e
    - python -m unittest calamari_ocr.test.test_train_ensemble

test-prediction:
  stage: test
  script:
    - set -e
    - python -m unittest calamari_ocr.test.test_prediction

test-predict-and-eval:
  stage: test
  script:
    - set -e
    - python -m unittest calamari_ocr.test.test_predict_and_eval

test-eval:
  stage: test
  script:
    - set -e
    - python -m unittest calamari_ocr.test.test_eval

test-scripts:
  stage: test
  script:
    - set -e
    - python -m unittest calamari_ocr.test.test_scripts

test-command-line:
  stage: test
  script:
    - set -e
    - calamari-train --train.images calamari_ocr/test/data/uw3_50lines/train/*.bin.png --trainer.epochs 1 --trainer.samples_per_epoch 16 --trainer.output_dir tmp_output --n_augmentations 2 --trainer.gen SplitTrain --network=cnn=40:3x3,pool=2x2,cnn=60:3x3,pool=2x2,lstm=200,dropout=0.5
    - calamari-predict --data.images calamari_ocr/test/data/uw3_50lines/test/*.png --checkpoint tmp_output/best.ckpt.json
    - calamari-eval --gt calamari_ocr/test/data/uw3_50lines/test/*.gt.txt
